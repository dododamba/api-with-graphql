type Query {
    hello(id: Int): String
    product(id: Int!): Product
    order(id: Int!): Order
    products(after: Int, first: Int): [Product]
    orders(after: Int, first: Int): [Order]
    bill(id: Int!): Bill
    bills(after: Int, first: Int): [Bill]
}

type Mutation {
    createProduct(name: String!, price: Float, weight: Float): [Product]
    updateProduct(id: ID!, name: String, price: Float, weight: Float): [Product]
    deleteProduct(id: ID!): [Product]
    createOrder(productId: Int!, quantity: Int!): [Order]
    updateStatus(orderId: Int!, status: String!): [Order]
}

type Product {
    id: Int!
    name: String!
    weight: Float
    price: Float
}

type Order {
    id: Int!
    productsList: [OrderedProduct]!
    status: String!
    shipmentAmount: Float
    totalAmount: Float
    weight: Float
}

type OrderedProduct {
    product : Product
    quantity : Int
}

scalar Date

type Bill {
    id: Int!
    createdAt: Date!
    orderId: Int!
    amount: Float!
}
